{"ast":null,"code":"import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n  init(particle) {\n    const container = particle.container,\n      sizeOptions = particle.options.size,\n      sizeAnimation = sizeOptions.animation;\n    if (sizeAnimation.enable) {\n      particle.size.velocity = (particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n      if (!sizeAnimation.sync) {\n        particle.size.velocity *= getRandom();\n      }\n    }\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && !particle.spawning && particle.size.enable && ((particle.size.maxLoops ?? 0) <= 0 || (particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0));\n  }\n  reset(particle) {\n    particle.size.loops = 0;\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateSize(particle, delta);\n  }\n}","map":{"version":3,"names":["getRandom","updateSize","SizeUpdater","init","particle","container","sizeOptions","options","size","sizeAnimation","animation","enable","velocity","retina","sizeAnimationSpeed","reduceFactor","sync","isEnabled","destroyed","spawning","maxLoops","loops","reset","update","delta"],"sources":["C:/Users/ADMIN/Desktop/ReactTask/11-4-25/task-tracker/client/node_modules/tsparticles-updater-size/esm/SizeUpdater.js"],"sourcesContent":["import { getRandom } from \"tsparticles-engine\";\r\nimport { updateSize } from \"./Utils\";\r\nexport class SizeUpdater {\r\n    init(particle) {\r\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\r\n        if (sizeAnimation.enable) {\r\n            particle.size.velocity =\r\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\r\n                    container.retina.reduceFactor;\r\n            if (!sizeAnimation.sync) {\r\n                particle.size.velocity *= getRandom();\r\n            }\r\n        }\r\n    }\r\n    isEnabled(particle) {\r\n        return (!particle.destroyed &&\r\n            !particle.spawning &&\r\n            particle.size.enable &&\r\n            ((particle.size.maxLoops ?? 0) <= 0 ||\r\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\r\n    }\r\n    reset(particle) {\r\n        particle.size.loops = 0;\r\n    }\r\n    update(particle, delta) {\r\n        if (!this.isEnabled(particle)) {\r\n            return;\r\n        }\r\n        updateSize(particle, delta);\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,UAAU,QAAQ,SAAS;AACpC,OAAO,MAAMC,WAAW,CAAC;EACrBC,IAAIA,CAACC,QAAQ,EAAE;IACX,MAAMC,SAAS,GAAGD,QAAQ,CAACC,SAAS;MAAEC,WAAW,GAAGF,QAAQ,CAACG,OAAO,CAACC,IAAI;MAAEC,aAAa,GAAGH,WAAW,CAACI,SAAS;IAChH,IAAID,aAAa,CAACE,MAAM,EAAE;MACtBP,QAAQ,CAACI,IAAI,CAACI,QAAQ,GACjB,CAACR,QAAQ,CAACS,MAAM,CAACC,kBAAkB,IAAIT,SAAS,CAACQ,MAAM,CAACC,kBAAkB,IAAI,GAAG,GAC9ET,SAAS,CAACQ,MAAM,CAACE,YAAY;MACrC,IAAI,CAACN,aAAa,CAACO,IAAI,EAAE;QACrBZ,QAAQ,CAACI,IAAI,CAACI,QAAQ,IAAIZ,SAAS,CAAC,CAAC;MACzC;IACJ;EACJ;EACAiB,SAASA,CAACb,QAAQ,EAAE;IAChB,OAAQ,CAACA,QAAQ,CAACc,SAAS,IACvB,CAACd,QAAQ,CAACe,QAAQ,IAClBf,QAAQ,CAACI,IAAI,CAACG,MAAM,KACnB,CAACP,QAAQ,CAACI,IAAI,CAACY,QAAQ,IAAI,CAAC,KAAK,CAAC,IAC9B,CAAChB,QAAQ,CAACI,IAAI,CAACY,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAChB,QAAQ,CAACI,IAAI,CAACa,KAAK,IAAI,CAAC,KAAKjB,QAAQ,CAACI,IAAI,CAACY,QAAQ,IAAI,CAAC,CAAE,CAAC;EAC9G;EACAE,KAAKA,CAAClB,QAAQ,EAAE;IACZA,QAAQ,CAACI,IAAI,CAACa,KAAK,GAAG,CAAC;EAC3B;EACAE,MAAMA,CAACnB,QAAQ,EAAEoB,KAAK,EAAE;IACpB,IAAI,CAAC,IAAI,CAACP,SAAS,CAACb,QAAQ,CAAC,EAAE;MAC3B;IACJ;IACAH,UAAU,CAACG,QAAQ,EAAEoB,KAAK,CAAC;EAC/B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}